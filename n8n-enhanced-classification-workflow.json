{
  "name": "WordPress Template AI Classification - Enhanced",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "wordpress-template-classify",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "webhook-trigger",
      "name": "Webhook Trigger",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [0, 0],
      "webhookId": "template-classify-webhook"
    },
    {
      "parameters": {
        "url": "={{ $json.body.api_catalog_url }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "options": {
          "timeout": 10000
        }
      },
      "id": "fetch-catalog-config",
      "name": "Fetch Catalog Config",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [224, 0],
      "credentials": {
        "httpHeaderAuth": {
          "id": "wp-api-auth",
          "name": "WordPress API Auth"
        }
      }
    },
    {
      "parameters": {
        "url": "={{ $json.body.demo_url }}",
        "options": {
          "timeout": 30000
        }
      },
      "id": "fetch-website-content",
      "name": "Fetch Website Content",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [224, 200]
    },
    {
      "parameters": {
        "jsCode": "// Enhanced content extraction with WordPress-specific analysis\nconst webhookData = $('Webhook Trigger').first().json.body;\nconst catalogData = $('Fetch Catalog Config').first().json;\nconst websiteContent = $('Fetch Website Content').first().json;\n\n// Extract HTML content\nlet html = websiteContent.data || websiteContent.body || websiteContent.html || '';\n\nconst extractEnhancedFeatures = (html, wordpressData) => {\n  // Clean HTML\n  let cleaned = html.replace(/<script[^>]*>.*?<\\/script>/gis, '')\n                   .replace(/<style[^>]*>.*?<\\/style>/gis, '');\n  \n  // Extract basic info\n  const titleMatch = cleaned.match(/<title[^>]*>([^<]*)<\\/title>/i);\n  const title = titleMatch ? titleMatch[1].trim() : '';\n  \n  const descMatch = cleaned.match(/<meta[^>]*name=[\"']description[\"'][^>]*content=[\"']([^\"']*)[\"']/i);\n  const description = descMatch ? descMatch[1] : '';\n  \n  // Extract visible text content\n  const bodyText = cleaned.replace(/<[^>]*>/g, ' ')\n                          .replace(/\\s+/g, ' ')\n                          .trim();\n  \n  // Extract headings\n  const headings = [];\n  const headingMatches = cleaned.match(/<h[1-6][^>]*>([^<]*)<\\/h[1-6]>/gi) || [];\n  headingMatches.forEach(match => {\n    const text = match.replace(/<[^>]*>/g, '').trim();\n    if (text.length > 2) headings.push(text);\n  });\n  \n  // Enhanced WordPress-specific detection using actual WP data\n  const wpPlugins = wordpressData?.plugins_info || {};\n  const wpTheme = wordpressData?.theme_info || {};\n  const contentAnalysis = wordpressData?.content_analysis || {};\n  const fileStructure = wordpressData?.file_structure || {};\n  \n  const indicators = {\n    // E-commerce detection\n    hasWooCommerce: wpPlugins.hasOwnProperty('woocommerce') || /woocommerce|add.to.cart|shop|product|cart/i.test(html),\n    hasShopify: /shopify/i.test(html),\n    hasEcommerce: /shop|store|buy|purchase|cart|checkout|product/i.test(bodyText),\n    \n    // Page builders (from actual WordPress data)\n    hasElementor: wpPlugins.hasOwnProperty('elementor') || /elementor/i.test(html),\n    hasDivi: wpTheme?.name?.toLowerCase().includes('divi') || /divi/i.test(html),\n    hasGutenberg: /wp-block-/i.test(html) && !/(hello.world|sample|default)/i.test(bodyText),\n    hasVisualComposer: wpPlugins.hasOwnProperty('js_composer'),\n    hasBeaver: wpPlugins.hasOwnProperty('bb-plugin'),\n    \n    // Content types\n    hasBooking: wpPlugins.hasOwnProperty('booking') || contentAnalysis?.content_indicators?.includes('booking') || /booking|reservation|appointment/i.test(bodyText),\n    hasEvents: wpPlugins.hasOwnProperty('the-events-calendar') || contentAnalysis?.content_indicators?.includes('events') || /event|calendar|schedule/i.test(bodyText),\n    hasPortfolio: /portfolio|work|project|gallery|showcase/i.test(bodyText),\n    hasBlog: /blog|post|article|news|read.more/i.test(bodyText),\n    hasTestimonials: /testimonial|review|client|customer/i.test(bodyText),\n    hasTeam: /team|staff|member|about.us|meet/i.test(bodyText),\n    hasGallery: contentAnalysis?.content_indicators?.includes('gallery') || /gallery|photos/i.test(bodyText),\n    \n    // Functional features\n    hasContactForm: wpPlugins.hasOwnProperty('contact-form-7') || contentAnalysis?.content_indicators?.includes('contact_forms') || /contact.form|get.in.touch/i.test(bodyText),\n    hasNewsletter: wpPlugins.hasOwnProperty('mailchimp-for-wp') || contentAnalysis?.content_indicators?.includes('newsletter') || /newsletter|subscribe/i.test(bodyText),\n    hasSocialMedia: /facebook|twitter|instagram|linkedin|social/i.test(html),\n    hasSlider: contentAnalysis?.content_indicators?.includes('slider') || /slider|carousel/i.test(html),\n    hasVideo: /video|youtube|vimeo/i.test(html),\n    \n    // Language/Accessibility\n    hasMultilingual: wpPlugins.hasOwnProperty('sitepress-multilingual-cms') || wpPlugins.hasOwnProperty('polylang') || contentAnalysis?.content_indicators?.includes('multilingual'),\n    \n    // Business type indicators\n    isRestaurant: /restaurant|cafe|bistro|menu|food|dining/i.test(bodyText),\n    isRealEstate: /real.estate|property|house|apartment|rent|buy|mortgage/i.test(bodyText),\n    isHealthcare: /health|medical|doctor|clinic|hospital|patient|therapy/i.test(bodyText),\n    isLegal: /law|legal|lawyer|attorney|court|justice/i.test(bodyText),\n    isEducation: /education|school|university|course|learn|student|teacher/i.test(bodyText),\n    isAutomotive: /car|auto|vehicle|garage|repair|dealership/i.test(bodyText),\n    isBeauty: /beauty|salon|spa|wellness|massage|hair|nail/i.test(bodyText),\n    isConstruction: /construction|building|contractor|architect|engineering/i.test(bodyText),\n    isFinance: /finance|bank|insurance|investment|loan|mortgage/i.test(bodyText),\n    isTechnology: /technology|software|app|digital|IT|development|saas/i.test(bodyText),\n    isCreative: /creative|design|art|photography|studio|agency/i.test(bodyText),\n    isNonprofit: /nonprofit|charity|donation|volunteer|foundation/i.test(bodyText),\n    isEvent: /event|conference|wedding|party|celebration/i.test(bodyText),\n    isTravel: /travel|tourism|hotel|vacation|trip|destination/i.test(bodyText),\n    \n    // Theme and customization level\n    isCustomized: fileStructure?.custom_themes > 0 || fileStructure?.has_custom_uploads,\n    isMinimalContent: bodyText.length < 1000 || /hello.world|sample.page|coming.soon|default|lorem.ipsum/i.test(bodyText),\n    hasChildTheme: fileStructure?.has_child_theme,\n    \n    // Plugin count indicators\n    pluginCount: Object.keys(wpPlugins).length,\n    hasMultiplePlugins: Object.keys(wpPlugins).length > 3\n  };\n  \n  return {\n    title,\n    description,\n    bodyText: bodyText.substring(0, 3500), // More content for better analysis\n    headings: headings.slice(0, 10),\n    indicators,\n    wordpressInfo: {\n      version: wordpressData?.wp_info?.version,\n      theme: wpTheme?.name || wordpressData?.theme_info?.active_theme,\n      plugins: Object.keys(wpPlugins).slice(0, 10), // Top 10 plugins\n      customization_level: fileStructure?.custom_themes > 0 ? 'high' : 'low',\n      content_size: contentAnalysis?.uploads_size || 0\n    }\n  };\n};\n\nconst templateData = {\n  slug: webhookData.slug,\n  name: webhookData.name,\n  demo_url: webhookData.demo_url,\n  screenshot_url: webhookData.screenshot_url,\n  api_callback_url: webhookData.api_callback_url,\n  api_token: webhookData.api_token\n};\n\nconst content = extractEnhancedFeatures(html, webhookData.wordpress_data);\nconst availableCategories = catalogData.categories;\nconst availableTags = catalogData.tags;\n\nreturn [{ templateData, content, availableCategories, availableTags }];"
      },
      "id": "enhanced-content-analysis",
      "name": "Enhanced Content Analysis",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [448, 100]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are an expert WordPress template classifier with access to comprehensive WordPress data. Analyze the provided information to categorize templates accurately.\n\n**ANALYSIS APPROACH:**\n1. **WordPress-First Analysis**: Prioritize actual WordPress data (plugins, themes, file structure) over HTML content\n2. **Evidence-Based Classification**: Only assign tags you can prove from the WordPress data or clear content evidence\n3. **Industry-Focused Categories**: Use the business industry as primary categorization factor\n4. **Conservative Tagging**: Better to have fewer accurate tags than many uncertain ones\n\n**AVAILABLE CATEGORIES:** {{ $json.availableCategories.join(', ') }}\n\n**AVAILABLE TAGS:** {{ $json.availableTags.join(', ') }}\n\n**WORDPRESS DATA ANALYSIS:**\nSite: {{ $json.templateData.name }} ({{ $json.templateData.slug }})\nURL: {{ $json.templateData.demo_url }}\n\n**WordPress Technical Info:**\n- WordPress Version: {{ $json.content.wordpressInfo.version }}\n- Active Theme: {{ $json.content.wordpressInfo.theme }}\n- Installed Plugins: {{ $json.content.wordpressInfo.plugins.join(', ') }}\n- Customization Level: {{ $json.content.wordpressInfo.customization_level }}\n- Content Size: {{ $json.content.wordpressInfo.content_size }} bytes\n- Plugin Count: {{ $json.content.indicators.pluginCount }}\n\n**Content Analysis:**\n- Title: \"{{ $json.content.title }}\"\n- Description: \"{{ $json.content.description }}\"\n- Main Headings: {{ $json.content.headings.join(', ') }}\n- Content Length: {{ $json.content.bodyText.length }} characters\n- Is Customized: {{ $json.content.indicators.isCustomized }}\n- Minimal Content: {{ $json.content.indicators.isMinimalContent }}\n\n**DETECTED FEATURES (WordPress-verified):**\nE-commerce: WooCommerce={{ $json.content.indicators.hasWooCommerce }}, Shopify={{ $json.content.indicators.hasShopify }}, General={{ $json.content.indicators.hasEcommerce }}\nPage Builders: Elementor={{ $json.content.indicators.hasElementor }}, Divi={{ $json.content.indicators.hasDivi }}, Gutenberg={{ $json.content.indicators.hasGutenberg }}, Visual Composer={{ $json.content.indicators.hasVisualComposer }}\nFunctionality: Booking={{ $json.content.indicators.hasBooking }}, Events={{ $json.content.indicators.hasEvents }}, Contact Forms={{ $json.content.indicators.hasContactForm }}, Newsletter={{ $json.content.indicators.hasNewsletter }}, Multilingual={{ $json.content.indicators.hasMultilingual }}\nContent Types: Portfolio={{ $json.content.indicators.hasPortfolio }}, Blog={{ $json.content.indicators.hasBlog }}, Gallery={{ $json.content.indicators.hasGallery }}, Team={{ $json.content.indicators.hasTeam }}, Testimonials={{ $json.content.indicators.hasTestimonials }}\n\n**BUSINESS TYPE INDICATORS:**\nRestaurant={{ $json.content.indicators.isRestaurant }}, Real Estate={{ $json.content.indicators.isRealEstate }}, Healthcare={{ $json.content.indicators.isHealthcare }}, Legal={{ $json.content.indicators.isLegal }}, Education={{ $json.content.indicators.isEducation }}, Automotive={{ $json.content.indicators.isAutomotive }}, Beauty={{ $json.content.indicators.isBeauty }}, Construction={{ $json.content.indicators.isConstruction }}, Finance={{ $json.content.indicators.isFinance }}, Technology={{ $json.content.indicators.isTechnology }}, Creative={{ $json.content.indicators.isCreative }}, Nonprofit={{ $json.content.indicators.isNonprofit }}, Events={{ $json.content.indicators.isEvent }}, Travel={{ $json.content.indicators.isTravel }}\n\n**CLASSIFICATION RULES:**\n1. If minimal content or default WordPress, use 'portfolio' category with basic tags only\n2. Prioritize business type over technical features for primary category\n3. Only add technical tags (elementor, woocommerce, etc.) if detected in WordPress data\n4. Maximum 5 tags, focus on most relevant ones\n5. Confidence should reflect certainty based on available data\n\n**ENHANCED CONTENT SAMPLE:** {{ $json.content.bodyText }}\n\nBased on this comprehensive WordPress analysis, provide accurate classification. Prioritize the WordPress plugin/theme data over HTML content analysis.\n\nRespond with valid JSON only:\n{\n  \"primary_category\": \"most_appropriate_industry_category\",\n  \"tags\": [\"max_5_evidence_based_tags\"],\n  \"confidence\": 0.XX,\n  \"rationale\": \"Detailed explanation citing specific WordPress data and content evidence\",\n  \"description_en\": \"English description (max 100 chars)\",\n  \"description_de\": \"German description (max 100 chars)\"\n}",
        "hasOutputParser": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [720, 100],
      "id": "enhanced-ai-classifier",
      "name": "Enhanced AI Classifier"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o",
          "mode": "list",
          "cachedResultName": "gpt-4o"
        },
        "options": {
          "temperature": 0.1,
          "maxTokens": 600
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [672, 340],
      "id": "openai-gpt4o",
      "name": "OpenAI GPT-4o",
      "credentials": {
        "openAiApi": {
          "id": "5bxlgiW82CWa6JUS",
          "name": "Metanow open api - Lead Generation API"
        }
      }
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n    \"primary_category\": \"category_name\",\n    \"tags\": [\"max_5_evidence_based_tags\"],\n    \"confidence\": 0.85,\n    \"rationale\": \"WordPress data and content evidence explanation\",\n    \"description_en\": \"English description (max 100 chars)\",\n    \"description_de\": \"German description (max 100 chars)\"\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [864, 340],
      "id": "structured-output-parser",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "jsCode": "// Enhanced validation with WordPress data verification\nconst aiResponse = $input.first().json;\nconst templateData = $('Enhanced Content Analysis').first().json.templateData;\nconst content = $('Enhanced Content Analysis').first().json.content;\nconst availableTags = $('Enhanced Content Analysis').first().json.availableTags;\nconst availableCategories = $('Enhanced Content Analysis').first().json.availableCategories;\n\ntry {\n  let classification;\n  \n  if (typeof aiResponse === 'string') {\n    const cleanResponse = aiResponse.replace(/```json\\n?/, '').replace(/```\\n?$/, '').trim();\n    classification = JSON.parse(cleanResponse);\n  } else if (aiResponse && typeof aiResponse === 'object') {\n    classification = aiResponse.output || aiResponse.text || aiResponse.response || aiResponse;\n    \n    if (typeof classification === 'string') {\n      const cleanResponse = classification.replace(/```json\\n?/, '').replace(/```\\n?$/, '').trim();\n      classification = JSON.parse(cleanResponse);\n    }\n  } else {\n    throw new Error('Invalid AI response format');\n  }\n  \n  // Validate structure\n  if (!classification.primary_category || !Array.isArray(classification.tags)) {\n    throw new Error('Invalid classification structure');\n  }\n  \n  // Validate category\n  if (!availableCategories.includes(classification.primary_category)) {\n    console.log('Invalid category, defaulting to portfolio:', classification.primary_category);\n    classification.primary_category = 'portfolio';\n  }\n  \n  // Validate and filter tags\n  classification.tags = classification.tags\n    .filter(tag => availableTags.includes(tag))\n    .slice(0, 5); // Max 5 tags\n  \n  // Enhanced WordPress-based validation\n  const wpPlugins = Object.keys(content.wordpressInfo?.plugins || []);\n  const problematicTags = ['woocommerce', 'elementor', 'divi'];\n  \n  classification.tags = classification.tags.filter(tag => {\n    if (tag === 'woocommerce' && !wpPlugins.includes('woocommerce') && !content.indicators.hasWooCommerce) {\n      console.log('Removing woocommerce tag - not found in WordPress data');\n      return false;\n    }\n    if (tag === 'elementor' && !wpPlugins.includes('elementor') && !content.indicators.hasElementor) {\n      console.log('Removing elementor tag - not found in WordPress data');\n      return false;\n    }\n    if (tag === 'divi' && !content.indicators.hasDivi) {\n      console.log('Removing divi tag - not found in WordPress data');\n      return false;\n    }\n    return true;\n  });\n  \n  // Handle minimal content\n  if (content.indicators.isMinimalContent) {\n    classification.tags = classification.tags.filter(tag => \n      ['responsive', 'contact_form', 'social_media'].includes(tag)\n    ).slice(0, 2);\n    \n    if (classification.confidence > 0.4) {\n      classification.confidence = Math.min(0.4, classification.confidence);\n    }\n  }\n  \n  // Validate confidence\n  if (typeof classification.confidence !== 'number' || classification.confidence < 0 || classification.confidence > 1) {\n    classification.confidence = 0.5;\n  }\n  \n  // Ensure descriptions exist\n  if (!classification.description_en) {\n    classification.description_en = `${classification.primary_category.replace('_', ' ')} WordPress template`;\n  }\n  if (!classification.description_de) {\n    classification.description_de = `${classification.primary_category.replace('_', ' ')} WordPress-Vorlage`;\n  }\n  \n  // Add metadata about the analysis\n  classification.metadata = {\n    wordpress_version: content.wordpressInfo?.version,\n    plugin_count: content.indicators?.pluginCount || 0,\n    customization_level: content.wordpressInfo?.customization_level,\n    analysis_source: 'enhanced_wordpress_data'\n  };\n  \n  return [{\n    json: {\n      templateData,\n      classification,\n      success: true\n    }\n  }];\n  \n} catch (error) {\n  // Conservative fallback\n  return [{\n    json: {\n      templateData,\n      classification: {\n        primary_category: 'portfolio',\n        tags: ['responsive'], // Only very basic tag\n        confidence: 0.2,\n        rationale: `Enhanced validation failed: ${error.message}. Using conservative fallback.`,\n        description_en: 'WordPress template',\n        description_de: 'WordPress-Vorlage',\n        metadata: {\n          analysis_source: 'fallback',\n          error: error.message\n        }\n      },\n      success: false,\n      error: error.message\n    }\n  }];\n}"
      },
      "id": "enhanced-validation",
      "name": "Enhanced Validation",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1088, 100]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $json.templateData.api_callback_url }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ JSON.stringify($json.classification) }}",
        "options": {
          "timeout": 10000
        }
      },
      "id": "update-classification",
      "name": "Update Classification",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [1312, 100],
      "credentials": {
        "httpHeaderAuth": {
          "id": "wp-api-auth",
          "name": "WordPress API Auth"
        }
      }
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"success\": {{ $json.success !== false }},\n  \"message\": \"Enhanced WordPress classification completed\",\n  \"template\": {\n    \"slug\": \"{{ $json.templateData.slug }}\",\n    \"classification\": {{ JSON.stringify($json.classification) }},\n    \"metadata\": {{ JSON.stringify($json.classification.metadata) }}\n  }\n}",
        "options": {}
      },
      "id": "webhook-response",
      "name": "Webhook Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [1536, 100]
    }
  ],
  "pinData": {},
  "connections": {
    "Webhook Trigger": {
      "main": [
        [
          {
            "node": "Fetch Catalog Config",
            "type": "main",
            "index": 0
          },
          {
            "node": "Fetch Website Content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch Catalog Config": {
      "main": [
        [
          {
            "node": "Enhanced Content Analysis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch Website Content": {
      "main": [
        [
          {
            "node": "Enhanced Content Analysis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Enhanced Content Analysis": {
      "main": [
        [
          {
            "node": "Enhanced AI Classifier",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Enhanced Validation": {
      "main": [
        [
          {
            "node": "Update Classification",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Classification": {
      "main": [
        [
          {
            "node": "Webhook Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI GPT-4o": {
      "ai_languageModel": [
        [
          {
            "node": "Enhanced AI Classifier",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Enhanced AI Classifier",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Enhanced AI Classifier": {
      "main": [
        [
          {
            "node": "Enhanced Validation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "enhanced-v2.0",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "tags": ["wordpress", "ai", "classification", "enhanced", "dynamic"]
}