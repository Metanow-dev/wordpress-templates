{
  "name": "Wordpress Categorisation",
  "nodes": [
    {
      "parameters": {
        "url": "={{ $json.body.api_catalog_url }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "options": {
          "timeout": 10000
        }
      },
      "id": "8215c1ef-637d-4577-8622-8484dd109698",
      "name": "Fetch Catalog Config2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [
        2832,
        1632
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "4InZm74eIehxvUcK",
          "name": "Header Auth account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are an expert WordPress template classifier with access to comprehensive WordPress data. Analyze the provided information to categorize templates accurately and generate a descriptive template name.\n\n**ANALYSIS APPROACH:**\n1. **WordPress-First Analysis**: Prioritize actual WordPress data (plugins, themes, file structure) over HTML content\n2. **Evidence-Based Classification**: Only assign tags you can prove from the WordPress data or clear content evidence\n3. **Industry-Focused Categories**: Use the business industry as primary categorization factor\n4. **Conservative Tagging**: Better to have fewer accurate tags than many uncertain ones\n5. **Handle Missing HTML**: If no HTML content available, rely entirely on WordPress data\n6. **Generate Descriptive Names**: Create a clear, marketable name that describes what the template is for\n\n**AVAILABLE CATEGORIES:** {{ $json.availableCategories.join(', ') }}\n\n**AVAILABLE TAGS:** {{ $json.availableTags.join(', ') }}\n\n**WORDPRESS DATA ANALYSIS:**\nCurrent Name: {{ $json.templateData.name }} ({{ $json.templateData.slug }})\nURL: {{ $json.templateData.demo_url }}\n\n**WordPress Technical Info:**\n- WordPress Version: {{ $json.content.wordpressInfo.version }}\n- Active Theme: {{ $json.content.wordpressInfo.theme }}\n- Installed Plugins: {{ $json.content.wordpressInfo.plugins.join(', ') }}\n- Customization Level: {{ $json.content.wordpressInfo.customization_level }}\n- Content Size: {{ $json.content.wordpressInfo.content_size }} bytes\n- Plugin Count: {{ $json.content.indicators.pluginCount }}\n- HTML Content Available: {{ $json.content.indicators.htmlContentAvailable }}\n\n**Content Analysis:**\n- Title: \"{{ $json.content.title }}\"\n- Description: \"{{ $json.content.description }}\"\n- Main Headings: {{ $json.content.headings.join(', ') }}\n- Content Length: {{ $json.content.bodyText.length }} characters\n- Is Customized: {{ $json.content.indicators.isCustomized }}\n- Minimal Content: {{ $json.content.indicators.isMinimalContent }}\n\n**DETECTED FEATURES (WordPress-verified):**\nE-commerce: WooCommerce={{ $json.content.indicators.hasWooCommerce }}, Shopify={{ $json.content.indicators.hasShopify }}, General={{ $json.content.indicators.hasEcommerce }}\nPage Builders: Elementor={{ $json.content.indicators.hasElementor }}, Divi={{ $json.content.indicators.hasDivi }}, Gutenberg={{ $json.content.indicators.hasGutenberg }}, Visual Composer={{ $json.content.indicators.hasVisualComposer }}\nFunctionality: Booking={{ $json.content.indicators.hasBooking }}, Events={{ $json.content.indicators.hasEvents }}, Contact Forms={{ $json.content.indicators.hasContactForm }}, Newsletter={{ $json.content.indicators.hasNewsletter }}, Multilingual={{ $json.content.indicators.hasMultilingual }}\nContent Types: Portfolio={{ $json.content.indicators.hasPortfolio }}, Blog={{ $json.content.indicators.hasBlog }}, Gallery={{ $json.content.indicators.hasGallery }}, Team={{ $json.content.indicators.hasTeam }}, Testimonials={{ $json.content.indicators.hasTestimonials }}\n\n**BUSINESS TYPE INDICATORS:**\nRestaurant={{ $json.content.indicators.isRestaurant }}, Real Estate={{ $json.content.indicators.isRealEstate }}, Healthcare={{ $json.content.indicators.isHealthcare }}, Legal={{ $json.content.indicators.isLegal }}, Education={{ $json.content.indicators.isEducation }}, Automotive={{ $json.content.indicators.isAutomotive }}, Beauty={{ $json.content.indicators.isBeauty }}, Construction={{ $json.content.indicators.isConstruction }}, Finance={{ $json.content.indicators.isFinance }}, Technology={{ $json.content.indicators.isTechnology }}, Creative={{ $json.content.indicators.isCreative }}, Nonprofit={{ $json.content.indicators.isNonprofit }}, Events={{ $json.content.indicators.isEvent }}, Travel={{ $json.content.indicators.isTravel }}\n\n**TEMPLATE NAMING GUIDELINES:**\n1. Create a descriptive, marketable name that immediately tells users what the template is for\n2. Use industry/business type + design style/purpose (e.g., \"Modern Restaurant Menu\", \"Corporate Law Firm\", \"Creative Portfolio\")\n3. Keep names concise but descriptive (3-6 words max)\n4. Avoid generic terms like \"template\", \"site\", \"website\" in the name\n5. Use the website content, theme, and business type to generate the name\n6. Examples: \"Minimalist Photography Portfolio\", \"Medical Clinic Landing Page\", \"E-commerce Fashion Store\"\n\n**CLASSIFICATION RULES:**\n1. If minimal content or default WordPress, use 'portfolio' category with basic tags only\n2. Prioritize business type over technical features for primary category\n3. Only add technical tags (elementor, woocommerce, etc.) if detected in WordPress data\n4. Maximum 5 tags, focus on most relevant ones\n5. Confidence should reflect certainty based on available data\n6. If HTML content unavailable, lower confidence but still classify based on WordPress data\n\n**ENHANCED CONTENT SAMPLE:** {{ $json.content.bodyText }}\n\nBased on this comprehensive WordPress analysis, provide accurate classification and generate a descriptive template name. Prioritize the WordPress plugin/theme data over HTML content analysis.\n\n**CRITICAL: You MUST include the ai_generated_name field in your response. This is required.**\n\nRespond with valid JSON only. ALL FIELDS ARE REQUIRED:\n{\n  \"primary_category\": \"most_appropriate_industry_category\",\n  \"tags\": [\"max_5_evidence_based_tags\"],\n  \"confidence\": 0.XX,\n  \"rationale\": \"Detailed explanation citing specific WordPress data and content evidence\",\n  \"description_en\": \"English description (max 100 chars)\",\n  \"description_de\": \"German description (max 100 chars)\",\n  \"ai_generated_name\": \"REQUIRED: Descriptive template name based on content and purpose (max 15 chars)\"\n}\n\nExample valid response:\n{\n  \"primary_category\": \"construction\",\n  \"tags\": [\"elementor\", \"business\", \"corporate\"],\n  \"confidence\": 0.85,\n  \"rationale\": \"Site shows construction equipment rental with Elementor page builder\",\n  \"description_en\": \"Construction equipment rental company website\",\n  \"description_de\": \"Baumaschinen-Vermietung Firmenwebsite\",\n  \"ai_generated_name\": \"Construction Equipment Rental\"\n}",
        "hasOutputParser": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        3328,
        1744
      ],
      "id": "c20e5f64-4099-4fc5-bc82-bc6b45ae4973",
      "name": "Enhanced AI Classifier2"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "wordpress-template-classify",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "699e4488-f185-43a6-a6a2-0f4c007153e4",
      "name": "Webhook Trigger4",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        2608,
        1728
      ],
      "webhookId": "template-classify-webhook"
    },
    {
      "parameters": {
        "url": "={{ $json.body.demo_url }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "options": {
          "redirect": {
            "redirect": {
              "maxRedirects": 5
            }
          },
          "timeout": 30000
        }
      },
      "id": "bac4e5d2-90ae-4add-9b96-6b367522763e",
      "name": "Fetch Website Content4",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [
        2832,
        1840
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "4InZm74eIehxvUcK",
          "name": "Header Auth account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Enhanced content extraction with WordPress-specific analysis\nconst webhookData = $('Webhook Trigger4').first().json.body;\nconst catalogData = $('Fetch Catalog Config2').first().json;\n\n// Handle potential website content fetch failure\nconst websiteContentNodes = $('Fetch Website Content4').all();\nlet websiteContent = null;\nlet html = '';\n\nif (websiteContentNodes.length > 0 && websiteContentNodes[0].json) {\n  websiteContent = websiteContentNodes[0].json;\n  html = websiteContent.data || websiteContent.body || websiteContent.html || '';\n} else {\n  console.log('Warning: Website content fetch failed, proceeding with WordPress data only');\n}\n\nconst extractEnhancedFeatures = (html, wordpressData) => {\n  // Clean HTML\n  let cleaned = html.replace(/<script[^>]*>.*?<\\/script>/gis, '')\n                   .replace(/<style[^>]*>.*?<\\/style>/gis, '');\n  \n  // Extract basic info\n  const titleMatch = cleaned.match(/<title[^>]*>([^<]*)<\\/title>/i);\n  const title = titleMatch ? titleMatch[1].trim() : '';\n  \n  const descMatch = cleaned.match(/<meta[^>]*name=[\\\"']description[\\\"'][^>]*content=[\\\"']([^\\\"']*)[\\\"']/i);\n  const description = descMatch ? descMatch[1] : '';\n  \n  // Extract visible text content\n  const bodyText = cleaned.replace(/<[^>]*>/g, ' ')\n                          .replace(/\\\\s+/g, ' ')\n                          .trim();\n  \n  // Extract headings\n  const headings = [];\n  const headingMatches = cleaned.match(/<h[1-6][^>]*>([^<]*)<\\/h[1-6]>/gi) || [];\n  headingMatches.forEach(match => {\n    const text = match.replace(/<[^>]*>/g, '').trim();\n    if (text.length > 2) headings.push(text);\n  });\n  \n  // Enhanced WordPress-specific detection using actual WP data\n  const wpPlugins = wordpressData?.plugins_info || {};\n  const wpTheme = wordpressData?.theme_info || {};\n  const contentAnalysis = wordpressData?.content_analysis || {};\n  const fileStructure = wordpressData?.file_structure || {};\n  \n  const indicators = {\n    // E-commerce detection\n    hasWooCommerce: wpPlugins.hasOwnProperty('woocommerce') || /woocommerce|add.to.cart|shop|product|cart/i.test(html),\n    hasShopify: /shopify/i.test(html),\n    hasEcommerce: /shop|store|buy|purchase|cart|checkout|product/i.test(bodyText),\n    \n    // Page builders (from actual WordPress data)\n    hasElementor: wpPlugins.hasOwnProperty('elementor') || /elementor/i.test(html),\n    hasDivi: wpTheme?.name?.toLowerCase().includes('divi') || /divi/i.test(html),\n    hasGutenberg: /wp-block-/i.test(html) && !/(hello.world|sample|default)/i.test(bodyText),\n    hasVisualComposer: wpPlugins.hasOwnProperty('js_composer'),\n    hasBeaver: wpPlugins.hasOwnProperty('bb-plugin'),\n    \n    // Content types\n    hasBooking: wpPlugins.hasOwnProperty('booking') || contentAnalysis?.content_indicators?.includes('booking') || /booking|reservation|appointment/i.test(bodyText),\n    hasEvents: wpPlugins.hasOwnProperty('the-events-calendar') || contentAnalysis?.content_indicators?.includes('events') || /event|calendar|schedule/i.test(bodyText),\n    hasPortfolio: /portfolio|work|project|gallery|showcase/i.test(bodyText),\n    hasBlog: /blog|post|article|news|read.more/i.test(bodyText),\n    hasTestimonials: /testimonial|review|client|customer/i.test(bodyText),\n    hasTeam: /team|staff|member|about.us|meet/i.test(bodyText),\n    hasGallery: contentAnalysis?.content_indicators?.includes('gallery') || /gallery|photos/i.test(bodyText),\n    \n    // Functional features\n    hasContactForm: wpPlugins.hasOwnProperty('contact-form-7') || contentAnalysis?.content_indicators?.includes('contact_forms') || /contact.form|get.in.touch/i.test(bodyText),\n    hasNewsletter: wpPlugins.hasOwnProperty('mailchimp-for-wp') || contentAnalysis?.content_indicators?.includes('newsletter') || /newsletter|subscribe/i.test(bodyText),\n    hasSocialMedia: /facebook|twitter|instagram|linkedin|social/i.test(html),\n    hasSlider: contentAnalysis?.content_indicators?.includes('slider') || /slider|carousel/i.test(html),\n    hasVideo: /video|youtube|vimeo/i.test(html),\n    \n    // Language/Accessibility\n    hasMultilingual: wpPlugins.hasOwnProperty('sitepress-multilingual-cms') || wpPlugins.hasOwnProperty('polylang') || contentAnalysis?.content_indicators?.includes('multilingual'),\n    \n    // Business type indicators\n    isRestaurant: /restaurant|cafe|bistro|menu|food|dining/i.test(bodyText),\n    isRealEstate: /real.estate|property|house|apartment|rent|buy|mortgage/i.test(bodyText),\n    isHealthcare: /health|medical|doctor|clinic|hospital|patient|therapy/i.test(bodyText),\n    isLegal: /law|legal|lawyer|attorney|court|justice/i.test(bodyText),\n    isEducation: /education|school|university|course|learn|student|teacher/i.test(bodyText),\n    isAutomotive: /car|auto|vehicle|garage|repair|dealership/i.test(bodyText),\n    isBeauty: /beauty|salon|spa|wellness|massage|hair|nail/i.test(bodyText),\n    isConstruction: /construction|building|contractor|architect|engineering/i.test(bodyText),\n    isFinance: /finance|bank|insurance|investment|loan|mortgage/i.test(bodyText),\n    isTechnology: /technology|software|app|digital|IT|development|saas/i.test(bodyText),\n    isCreative: /creative|design|art|photography|studio|agency/i.test(bodyText),\n    isNonprofit: /nonprofit|charity|donation|volunteer|foundation/i.test(bodyText),\n    isEvent: /event|conference|wedding|party|celebration/i.test(bodyText),\n    isTravel: /travel|tourism|hotel|vacation|trip|destination/i.test(bodyText),\n    \n    // Theme and customization level\n    isCustomized: fileStructure?.custom_themes > 0 || fileStructure?.has_custom_uploads,\n    isMinimalContent: bodyText.length < 1000 || /hello.world|sample.page|coming.soon|default|lorem.ipsum/i.test(bodyText),\n    hasChildTheme: fileStructure?.has_child_theme,\n    \n    // Plugin count indicators\n    pluginCount: Object.keys(wpPlugins).length,\n    hasMultiplePlugins: Object.keys(wpPlugins).length > 3,\n    \n    // Add fallback indicator when no HTML content available\n    htmlContentAvailable: html.length > 0\n  };\n  \n  return {\n    title,\n    description,\n    bodyText: bodyText.substring(0, 3500), // More content for better analysis\n    headings: headings.slice(0, 10),\n    indicators,\n    wordpressInfo: {\n      version: wordpressData?.wp_info?.version,\n      theme: wpTheme?.name || wordpressData?.theme_info?.active_theme,\n      plugins: Object.keys(wpPlugins).slice(0, 10), // Top 10 plugins\n      customization_level: fileStructure?.custom_themes > 0 ? 'high' : 'low',\n      content_size: contentAnalysis?.uploads_size || 0\n    }\n  };\n};\n\nconst templateData = {\n  slug: webhookData.slug,\n  name: webhookData.name,\n  demo_url: webhookData.demo_url,\n  screenshot_url: webhookData.screenshot_url,\n  api_callback_url: webhookData.api_callback_url,\n  api_token: webhookData.api_token\n};\n\nconst content = extractEnhancedFeatures(html, webhookData.wordpress_data);\nconst availableCategories = catalogData.categories;\nconst availableTags = catalogData.tags;\n\nreturn [{ templateData, content, availableCategories, availableTags }];"
      },
      "id": "19429395-5677-436a-a869-3b4c992d8c92",
      "name": "Enhanced Content Analysis2",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3168,
        1744
      ]
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o",
          "mode": "list",
          "cachedResultName": "gpt-4o"
        },
        "options": {
          "maxTokens": 600,
          "temperature": 0.3
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        3280,
        1984
      ],
      "id": "e38c3876-333b-4631-b4ae-42051467a607",
      "name": "OpenAI GPT-4o3",
      "credentials": {
        "openAiApi": {
          "id": "5bxlgiW82CWa6JUS",
          "name": "Metanow open api - Lead Generation API"
        }
      }
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n    \"primary_category\": \"category_name\",\n    \"tags\": [\"max_5_evidence_based_tags\"],\n    \"confidence\": 0.85,\n    \"rationale\": \"WordPress data and content evidence explanation\",\n    \"description_en\": \"English description (max 100 chars)\",\n    \"description_de\": \"German description (max 100 chars)\",\n  \"ai_generated_name\": \"An AI generated name based on webiste(max 12 chars)\"\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        3472,
        1984
      ],
      "id": "6d5360c9-844e-4475-a0ca-8ff40d21e534",
      "name": "Structured Output Parser4"
    },
    {
      "parameters": {
        "jsCode": "// Enhanced validation with WordPress data verification\nconst aiResponse = $input.first().json;\nconst templateData = $('Enhanced Content Analysis2').first().json.templateData;\nconst content = $('Enhanced Content Analysis2').first().json.content;\nconst availableTags = $('Enhanced Content Analysis2').first().json.availableTags;\nconst availableCategories = $('Enhanced Content Analysis2').first().json.availableCategories;\n\ntry {\n  let classification;\n  \n  if (typeof aiResponse === 'string') {\n    const cleanResponse = aiResponse.replace(/```json\\n?/, '').replace(/```\\n?$/, '').trim();\n    classification = JSON.parse(cleanResponse);\n  } else if (aiResponse && typeof aiResponse === 'object') {\n    classification = aiResponse.output || aiResponse.text || aiResponse.response || aiResponse;\n    \n    if (typeof classification === 'string') {\n      const cleanResponse = classification.replace(/```json\\n?/, '').replace(/```\\n?$/, '').trim();\n      classification = JSON.parse(cleanResponse);\n    }\n  } else {\n    throw new Error('Invalid AI response format');\n  }\n  \n  // Validate structure\n  if (!classification.primary_category || !Array.isArray(classification.tags)) {\n    throw new Error('Invalid classification structure');\n  }\n  \n  // Validate category\n  if (!availableCategories.includes(classification.primary_category)) {\n    console.log('Invalid category, defaulting to portfolio:', classification.primary_category);\n    classification.primary_category = 'portfolio';\n  }\n  \n  // Validate and filter tags\n  classification.tags = classification.tags\n    .filter(tag => availableTags.includes(tag))\n    .slice(0, 5); // Max 5 tags\n  \n  // Enhanced WordPress-based validation\n  const wpPlugins = Object.keys(content.wordpressInfo?.plugins || []);\n  \n  classification.tags = classification.tags.filter(tag => {\n    if (tag === 'woocommerce' && !wpPlugins.includes('woocommerce') && !content.indicators.hasWooCommerce) {\n      console.log('Removing woocommerce tag - not found in WordPress data');\n      return false;\n    }\n    if (tag === 'elementor' && !wpPlugins.includes('elementor') && !content.indicators.hasElementor) {\n      console.log('Removing elementor tag - not found in WordPress data');\n      return false;\n    }\n    if (tag === 'divi' && !content.indicators.hasDivi) {\n      console.log('Removing divi tag - not found in WordPress data');\n      return false;\n    }\n    return true;\n  });\n  \n  // Handle minimal content or no HTML content\n  if (content.indicators.isMinimalContent || !content.indicators.htmlContentAvailable) {\n    classification.tags = classification.tags.filter(tag => \n      ['responsive', 'contact_form', 'social_media'].includes(tag)\n    ).slice(0, 2);\n    \n    if (classification.confidence > 0.4) {\n      classification.confidence = Math.min(0.4, classification.confidence);\n    }\n  }\n  \n  // Validate confidence\n  if (typeof classification.confidence !== 'number' || classification.confidence < 0 || classification.confidence > 1) {\n    classification.confidence = 0.5;\n  }\n  \n  // Ensure descriptions exist\n  if (!classification.description_en) {\n    classification.description_en = `${classification.primary_category.replace('_', ' ')} WordPress template`;\n  }\n  if (!classification.description_de) {\n    classification.description_de = `${classification.primary_category.replace('_', ' ')} WordPress-Vorlage`;\n  }\n  \n  // Add metadata about the analysis\n  classification.metadata = {\n    wordpress_version: content.wordpressInfo?.version,\n    plugin_count: content.indicators?.pluginCount || 0,\n    customization_level: content.wordpressInfo?.customization_level,\n    analysis_source: 'enhanced_wordpress_data',\n    html_content_available: content.indicators?.htmlContentAvailable || false\n  };\n  \n  return [{\n    json: {\n      templateData,\n      classification,\n      success: true\n    }\n  }];\n  \n} catch (error) {\n  // Conservative fallback\n  return [{\n    json: {\n      templateData,\n      classification: {\n        primary_category: 'portfolio',\n        tags: ['responsive'], // Only very basic tag\n        confidence: 0.2,\n        rationale: `Enhanced validation failed: ${error.message}. Using conservative fallback.`,\n        description_en: 'WordPress template',\n        description_de: 'WordPress-Vorlage',\n        metadata: {\n          analysis_source: 'fallback',\n          error: error.message\n        }\n      },\n      success: false,\n      error: error.message\n    }\n  }];\n}"
      },
      "id": "926e30c9-5350-4c86-80f0-564ad9027db1",
      "name": "Enhanced Validation2",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3696,
        1744
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $json.templateData.api_callback_url }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json.classification }}",
        "options": {
          "timeout": 10000
        }
      },
      "id": "6d71bb57-4e17-487c-b865-badd3f11e93a",
      "name": "Update Classification4",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [
        3920,
        1744
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "4InZm74eIehxvUcK",
          "name": "Header Auth account"
        }
      }
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"success\": {{ $json.success !== false }},\n  \"message\": \"Enhanced WordPress classification completed\",\n  \"template\": {\n    \"slug\": \"{{ $json.template.slug }}\",\n    \"classification\": \"{{ $('Enhanced Validation2').item.json.classification }}\",\n    \"metadata\": \"{{ $('Enhanced Validation2').item.json.classification.metadata }}\"\n  }\n}",
        "options": {}
      },
      "id": "f2edd6bb-610f-4a50-af47-dcd263959113",
      "name": "Webhook Response4",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        4144,
        1744
      ]
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        3024,
        1744
      ],
      "id": "b814b4ce-0fef-45c8-91f0-617b3644ad90",
      "name": "Merge2"
    }
  ],
  "pinData": {
    "Webhook Trigger4": [
      {
        "json": {
          "headers": {
            "host": "metanow.app.n8n.cloud",
            "user-agent": "GuzzleHttp/7",
            "content-length": "5018",
            "accept-encoding": "gzip, br",
            "cdn-loop": "cloudflare; loops=1; subreqs=1",
            "cf-connecting-ip": "2a01:4f9:3070:1bd2::2",
            "cf-ew-via": "15",
            "cf-ipcountry": "FI",
            "cf-ray": "9831536c03f71ecb-ARN",
            "cf-visitor": "{\"scheme\":\"https\"}",
            "cf-worker": "n8n.cloud",
            "content-type": "application/json",
            "x-forwarded-for": "2a01:4f9:3070:1bd2::2, 104.23.221.15",
            "x-forwarded-host": "metanow.app.n8n.cloud",
            "x-forwarded-port": "443",
            "x-forwarded-proto": "https",
            "x-forwarded-server": "traefik-prod-users-gwc-28-7b57cfbbf9-54s2r",
            "x-is-trusted": "yes",
            "x-real-ip": "2a01:4f9:3070:1bd2::2"
          },
          "params": {},
          "query": {},
          "body": {
            "slug": "julbra",
            "name": "Julbra",
            "demo_url": "https://wp-templates.metanow.dev/julbra/",
            "screenshot_url": "https://wp-templates.metanow.dev/storage/screenshots/julbra.png",
            "wordpress_data": {
              "slug": "julbra",
              "demo_url": "https://wp-templates.metanow.dev/julbra/",
              "wp_info": {
                "version": "6.8.2",
                "multisite": true,
                "debug_mode": false,
                "language": "en_US"
              },
              "theme_info": {
                "active_theme": "astra",
                "theme_features": {
                  "name": "Astra",
                  "description": "The Astra WordPress theme is lightning-fast and highly customizable. It has over 1 million downloads and the only theme in the world with 5,700+ five-star reviews! It’s ideal for professional web designers, solopreneurs, small businesses, eCommerce, membership sites and any type of website. It offers special features and templates so it works perfectly with all page builders like Spectra, Elementor, Beaver Builder, etc. Fast performance, clean code, mobile-first design and schema markup are all built-in, making the theme exceptionally SEO-friendly. It’s fully compatible with WooCommerce, SureCart and other eCommerce plugins and comes with lots of store-friendly features and templates. Astra also provides expert support for free users. A dedicated team of fully trained WordPress experts are on hand to help with every aspect of the theme. Try the live demo of Astra: https://zipwp.org/themes/astra/",
                  "version": "4.11.0",
                  "author": "Brainstorm Force",
                  "tags": [
                    "custom-menu",
                    "custom-logo",
                    "entertainment",
                    "one-column",
                    "two-columns",
                    "left-sidebar",
                    "e-commerce",
                    "right-sidebar",
                    "custom-colors",
                    "editor-style",
                    "featured-images",
                    "full-width-template",
                    "microformats",
                    "post-formats",
                    "rtl-language-support",
                    "theme-options",
                    "threaded-comments",
                    "translation-ready",
                    "blog"
                  ]
                },
                "parent_theme": null
              },
              "plugins_info": {
                "akismet": {
                  "name": "Akismet Anti-spam: Spam Protection",
                  "description": "Used by millions, Akismet is quite possibly the best way in the world to <strong>protect your blog from spam</strong>. Akismet Anti-spam keeps your site protected even while you sleep. To get started: activate the Akismet plugin and then go to your Akismet Settings page to set up your API key.",
                  "version": "5.4",
                  "author": "Automattic - Anti-spam Team",
                  "folder": "akismet"
                },
                "all-in-one-wp-migration": {
                  "name": "All-in-One WP Migration and Backup",
                  "description": "All-in-One WP Migration makes moving your entire WordPress site simple. Export or import your database, media, plugins, and themes with just a few clicks.",
                  "version": "7.99",
                  "author": "ServMask",
                  "folder": "all-in-one-wp-migration"
                },
                "all-in-one-wp-migration-unlimited-extension": {
                  "name": "All-in-One WP Migration Unlimited Extension",
                  "description": "Extension for All-in-One WP Migration that enables unlimited size exports and imports",
                  "version": "2.76",
                  "author": "ServMask",
                  "folder": "all-in-one-wp-migration-unlimited-extension"
                },
                "complianz-gdpr": {
                  "folder": "complianz-gdpr"
                },
                "elementor": {
                  "name": "Elementor",
                  "description": "The Elementor Website Builder has it all: drag and drop page builder, pixel perfect design, mobile responsive editing, and more. Get started now!",
                  "version": "3.28.4",
                  "author": "Elementor.com",
                  "folder": "elementor"
                },
                "elementor-pro": {
                  "name": "Elementor Pro",
                  "description": "Elevate your designs and unlock the full power of Elementor. Gain access to dozens of Pro widgets and kits, Theme Builder, Pop Ups, Forms and WooCommerce building capabilities.",
                  "version": "3.28.3",
                  "author": "Elementor.com",
                  "folder": "elementor-pro"
                },
                "elementskit-lite": {
                  "name": "ElementsKit Lite",
                  "description": "The most advanced addons for Elementor with tons of widgets, Header builder, Footer builder, Mega menu builder, layout pack and powerful custom controls.",
                  "version": "3.5.1",
                  "author": "Wpmet",
                  "folder": "elementskit-lite"
                },
                "envato-elements": {
                  "name": "Envato Elements",
                  "description": "Access beautifully designed Template Kits + Photos from Envato Elements.",
                  "version": "2.0.16",
                  "author": "Envato",
                  "folder": "envato-elements"
                },
                "gum-elementor-addon": {
                  "name": "Gum Elementor Addon",
                  "description": "Addon widget for Elementor. Slideshow, pricing table, icon list, recent post, blog term, post term, post share, post meta, post related, post adjacent, blog grid, post slider,navigation menu, image box, popover and to top button",
                  "version": "1.3.12",
                  "author": "TemeGUM",
                  "folder": "gum-elementor-addon"
                },
                "metform": {
                  "name": "MetForm",
                  "description": "Most flexible and design friendly form builder for Elementor",
                  "version": "3.9.8",
                  "author": "Wpmet",
                  "folder": "metform"
                }
              },
              "content_analysis": {
                "uploads_size": 41344540,
                "uploads_types": {
                  "jpg": 167,
                  "png": 104,
                  "webp": 75,
                  "woff2": 14,
                  "css": 40,
                  "php": 1,
                  "json": 21,
                  "zip": 1,
                  "html": 1,
                  "pdf": 1
                },
                "has_custom_content": true,
                "content_indicators": [
                  "elementor"
                ]
              },
              "file_structure": {
                "custom_themes": 4,
                "custom_plugins": 10,
                "mu_plugins": 0,
                "has_child_theme": false,
                "has_custom_uploads": true
              }
            },
            "api_callback_url": "https://wp-templates.metanow.dev/api/templates/julbra/classification",
            "api_catalog_url": "https://wp-templates.metanow.dev/api/catalog",
            "api_token": "wp_templates_2024_secure_token_abc123def456ghi789jkl012mno345pqr678stu"
          },
          "webhookUrl": "https://metanow.app.n8n.cloud/webhook/wordpress-template-classify",
          "executionMode": "production"
        }
      }
    ]
  },
  "connections": {
    "Fetch Catalog Config2": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Enhanced AI Classifier2": {
      "main": [
        [
          {
            "node": "Enhanced Validation2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook Trigger4": {
      "main": [
        [
          {
            "node": "Fetch Catalog Config2",
            "type": "main",
            "index": 0
          },
          {
            "node": "Fetch Website Content4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch Website Content4": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Enhanced Content Analysis2": {
      "main": [
        [
          {
            "node": "Enhanced AI Classifier2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI GPT-4o3": {
      "ai_languageModel": [
        [
          {
            "node": "Enhanced AI Classifier2",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser4": {
      "ai_outputParser": [
        [
          {
            "node": "Enhanced AI Classifier2",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Enhanced Validation2": {
      "main": [
        [
          {
            "node": "Update Classification4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Classification4": {
      "main": [
        [
          {
            "node": "Webhook Response4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge2": {
      "main": [
        [
          {
            "node": "Enhanced Content Analysis2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "e21521c8-e62f-4c20-bfe3-e3da4b363cc5",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "9cf9df93adedf9a3cf8c947adbbfa5421022dc8224ec7057f8a23aa28853148a"
  },
  "id": "kwqPVVXkAzza7Mi1",
  "tags": []
}